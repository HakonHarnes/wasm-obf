emcc: warning: LLVM version for clang executable "/usr/local/bin/clang" appears incorrect (seeing "16.0", expected "17") [-Wversion-check]
cil-Cx09IQNc.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-9VlxUhPv.i","")
        ^
cil-y75ppg3x.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-o4D6208K.i","")
        ^
cil-nnEP56GS.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-N_sQoMKj.i","")
        ^
cil-7HlpMnd2.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-G9TCSX4R.i","")
        ^
cil-DD76pTk8.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-3K1CJtKD.i","")
        ^
jh_ansi_opt64.c:378:7: warning: variable 'tmp___0' set but not used [-Wunused-but-set-variable]
  int tmp___0 ;
      ^
cil-wIJSmtYL.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-tNmvjJnP.i","")
        ^
cil-tfMGpW4O.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-z9_BKLFa.i","")
        ^
cil-3UrcY5ND.o:1:9: warning: unknown pragma ignored [-Wunknown-pragmas]
#pragma merger("0","/tmp/cil-bE5Nvsdq.i","")
        ^
std::mt19937_64 seeded with current timestamp: 1679667321891
Initializing Hikari Core with Revision ID:dc9664d3ffbd6539efca6fbc18506fb7f8883093
Running Hikari On /llvm/dataset/cn-rwz/cn-rwz.c
Failed To Link PreCompiled AntiHooking IR From:/root/Hikari/PrecompiledAntiHooking-unknown-unknown.bc
Doing Post-Run Cleanup
Running IndirectBranch On blake256_compress
Running IndirectBranch On blake256_init
Running IndirectBranch On blake224_init
Running IndirectBranch On blake256_update
Running IndirectBranch On blake224_update
Running IndirectBranch On blake256_final_h
Running IndirectBranch On blake256_final
Running IndirectBranch On blake224_final
Running IndirectBranch On blake256_hash
Running IndirectBranch On blake
Running IndirectBranch On blake224_hash
Running IndirectBranch On hmac_blake256_init
Running IndirectBranch On hmac_blake224_init
Running IndirectBranch On hmac_blake256_update
Running IndirectBranch On hmac_blake224_update
Running IndirectBranch On hmac_blake256_final
Running IndirectBranch On hmac_blake224_final
Running IndirectBranch On hmac_blake256_hash
Running IndirectBranch On hmac_blake224_hash
Running IndirectBranch On do_blake_hash
Running IndirectBranch On do_groestl_hash
Running IndirectBranch On groestl
Running IndirectBranch On do_jh_hash
Running IndirectBranch On jh
Running IndirectBranch On do_skein_hash
Running IndirectBranch On skein
Running IndirectBranch On xor_blocks_dst
Running IndirectBranch On mul64to128
Running IndirectBranch On sum_xor_dst
Running IndirectBranch On xor_blocks
Running IndirectBranch On SubAndShiftAndMixAddRound
Running IndirectBranch On SubAndShiftAndMixAddRoundInPlace
Running IndirectBranch On cryptonight_hash_ctx
Running IndirectBranch On oaes_alloc
Running IndirectBranch On keccak
Running IndirectBranch On v4_random_math_init
Running IndirectBranch On oaes_key_import_data
Running IndirectBranch On xor64
Running IndirectBranch On copy_block
Running IndirectBranch On v4_random_math
Running IndirectBranch On oaes_free
Running IndirectBranch On keccakf
Running IndirectBranch On cryptonight
Running IndirectBranch On Init
Running IndirectBranch On Update
Running IndirectBranch On Final
Running IndirectBranch On Hash
Running IndirectBranch On keccak1600
Running IndirectBranch On hash_cn
Running IndirectBranch On oaes_sprintf
Running IndirectBranch On oaes_key_gen_128
Running IndirectBranch On oaes_key_gen
Running IndirectBranch On oaes_key_gen_192
Running IndirectBranch On oaes_key_gen_256
Running IndirectBranch On oaes_key_export
Running IndirectBranch On oaes_key_export_data
Running IndirectBranch On oaes_key_import
Running IndirectBranch On oaes_key_destroy
Running IndirectBranch On oaes_key_expand
Running IndirectBranch On oaes_get_seed
Running IndirectBranch On oaes_set_option
Running IndirectBranch On oaes_encrypt
Running IndirectBranch On oaes_encrypt_block
Running IndirectBranch On oaes_decrypt
Running IndirectBranch On oaes_decrypt_block
Running IndirectBranch On oaes_encryption_round
Running IndirectBranch On oaes_sub_byte
Running IndirectBranch On oaes_shift_rows
Running IndirectBranch On oaes_mix_cols
Running IndirectBranch On oaes_pseudo_encrypt_ecb
Running IndirectBranch On Skein_Put64_LSB_First
Running IndirectBranch On Skein_Get64_LSB_First
Running IndirectBranch On Init___1
Running IndirectBranch On Update___1
Running IndirectBranch On Final___1
Running IndirectBranch On check_data
Running IndirectBranch On Transform
Running IndirectBranch On F512
Running IndirectBranch On RND512Q
Running IndirectBranch On RND512P
Running IndirectBranch On OutputTransformation
Running IndirectBranch On Init___0
Running IndirectBranch On Update___0
Running IndirectBranch On Final___0
Running IndirectBranch On F8
Running IndirectBranch On E8
Running IndirectBranch On oaes_word_rot_left
Running IndirectBranch On oaes_inv_shift_rows
Running IndirectBranch On oaes_inv_sub_byte
Running IndirectBranch On oaes_inv_mix_cols
Running IndirectBranch On oaes_gf_mul
Running IndirectBranch On Skein_512_Init
Running IndirectBranch On Skein1024_Init
Running IndirectBranch On Skein_512_Process_Block
Running IndirectBranch On Skein1024_Process_Block
Running IndirectBranch On Skein_512_Update
Running IndirectBranch On Skein_256_Update
Running IndirectBranch On Skein1024_Update
Running IndirectBranch On Skein_256_Process_Block
Running IndirectBranch On Skein_512_Final
Running IndirectBranch On Skein_256_Final
Running IndirectBranch On Skein1024_Final
Running IndirectBranch On HikariIndirectBranchTargetWrapper
Hikari Out
Spend Time: 0.0330074s
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /usr/local/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -Werror=implicit-function-declaration --sysroot=/src/emscripten/cache/sysroot -Xclang -iwithsysroot/include/fakesdl -Xclang -iwithsysroot/include/compat -O3 -Wall -Wbad-function-cast -Wcast-function-type -fmacro-backtrace-limit=0 -mllvm -enable-indibran /llvm/dataset/cn-rwz/cn-rwz.c -c -o /tmp/emscripten_temp_isjg8pd8/cn-rwz_0.o
1.	<eof> parser at end of file
2.	Code generation
3.	Running pass 'Function Pass Manager' on module '/llvm/dataset/cn-rwz/cn-rwz.c'.
4.	Running pass 'CodeGen Prepare' on function '@cryptonight_hash_ctx'
 #0 0x000056049dcdb6f3 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/usr/local/bin/clang+0x18986f3)
 #1 0x000056049dcda354 llvm::sys::RunSignalHandlers() (/usr/local/bin/clang+0x1897354)
 #2 0x000056049dc932cd (anonymous namespace)::CrashRecoveryContextImpl::HandleCrash(int, unsigned long) CrashRecoveryContext.cpp:0:0
 #3 0x000056049dc93622 CrashRecoverySignalHandler(int) CrashRecoveryContext.cpp:0:0
 #4 0x00007fe614ce8f50 (/usr/lib/libc.so.6+0x38f50)
 #5 0x000056049d59476b llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const (/usr/local/bin/clang+0x115176b)
 #6 0x000056049d69ae8c (anonymous namespace)::CodeGenPrepare::eliminateMostlyEmptyBlocks(llvm::Function&) CodeGenPrepare.cpp:0:0
 #7 0x000056049d6ab5ec (anonymous namespace)::CodeGenPrepare::runOnFunction(llvm::Function&) (.part.0) CodeGenPrepare.cpp:0:0
 #8 0x000056049d962940 llvm::FPPassManager::runOnFunction(llvm::Function&) (/usr/local/bin/clang+0x151f940)
 #9 0x000056049d962ad1 llvm::FPPassManager::runOnModule(llvm::Module&) (/usr/local/bin/clang+0x151fad1)
#10 0x000056049d963106 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/usr/local/bin/clang+0x1520106)
#11 0x000056049de6ef45 clang::EmitBackendOutput(clang::DiagnosticsEngine&, clang::HeaderSearchOptions const&, clang::CodeGenOptions const&, clang::TargetOptions const&, clang::LangOptions const&, llvm::StringRef, llvm::Module*, clang::BackendAction, std::unique_ptr<llvm::raw_pwrite_stream, std::default_delete<llvm::raw_pwrite_stream>>) (/usr/local/bin/clang+0x1a2bf45)
#12 0x000056049e5b2544 clang::BackendConsumer::HandleTranslationUnit(clang::ASTContext&) (/usr/local/bin/clang+0x216f544)
#13 0x000056049eb9d65f clang::ParseAST(clang::Sema&, bool, bool) (/usr/local/bin/clang+0x275a65f)
#14 0x000056049e25bd5e clang::FrontendAction::Execute() (/usr/local/bin/clang+0x1e18d5e)
#15 0x000056049e220bf1 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) (/usr/local/bin/clang+0x1dddbf1)
#16 0x000056049e2b86a7 clang::ExecuteCompilerInvocation(clang::CompilerInstance*) (/usr/local/bin/clang+0x1e756a7)
#17 0x000056049d3062f9 cc1_main(llvm::ArrayRef<char const*>, char const*, void*) (/usr/local/bin/clang+0xec32f9)
#18 0x000056049d302e3e ExecuteCC1Tool(llvm::SmallVectorImpl<char const*>&) driver.cpp:0:0
#19 0x000056049e167e49 void llvm::function_ref<void ()>::callback_fn<clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const::'lambda'()>(long) Job.cpp:0:0
#20 0x000056049dc9372a llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) (/usr/local/bin/clang+0x185072a)
#21 0x000056049e1685c3 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const (.part.0) Job.cpp:0:0
#22 0x000056049e14c107 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const (/usr/local/bin/clang+0x1d09107)
#23 0x000056049e14c222 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const (/usr/local/bin/clang+0x1d09222)
#24 0x000056049e150f84 clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) (/usr/local/bin/clang+0x1d0df84)
#25 0x000056049d304dd2 clang_main(int, char**) (/usr/local/bin/clang+0xec1dd2)
#26 0x00007fe614cd3790 (/usr/lib/libc.so.6+0x23790)
#27 0x00007fe614cd384a __libc_start_main (/usr/lib/libc.so.6+0x2384a)
#28 0x000056049d301145 _start (/usr/local/bin/clang+0xebe145)
clang-16: error: clang frontend command failed with exit code 139 (use -v to see invocation)
clang version 16.0.0 (https://github.com/61bcdefg/Hikari-LLVM15.git e1b34265d7f8a681dd1ad0c3a96d3658b4fcc1b7)
Target: wasm32-unknown-emscripten
Thread model: posix
InstalledDir: /usr/local/bin
clang-16: note: diagnostic msg: 
********************

PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
clang-16: note: diagnostic msg: /tmp/cn-rwz-99759e.c
clang-16: note: diagnostic msg: /tmp/cn-rwz-99759e.sh
clang-16: note: diagnostic msg: 

********************
emcc: error: '/usr/local/bin/clang -target wasm32-unknown-emscripten -fignore-exceptions -fvisibility=default -mllvm -combiner-global-alias-analysis=false -mllvm -enable-emscripten-sjlj -mllvm -disable-lsr -DEMSCRIPTEN -Werror=implicit-function-declaration --sysroot=/src/emscripten/cache/sysroot -Xclang -iwithsysroot/include/fakesdl -Xclang -iwithsysroot/include/compat -O3 -Wall -Wbad-function-cast -Wcast-function-type -fmacro-backtrace-limit=0 -mllvm -enable-indibran /llvm/dataset/cn-rwz/cn-rwz.c -c -o /tmp/emscripten_temp_isjg8pd8/cn-rwz_0.o' failed (returned 1)
